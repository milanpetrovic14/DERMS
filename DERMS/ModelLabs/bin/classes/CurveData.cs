//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// Multi-purpose data points for defining a curve.  The use of this generic class is discouraged if a more specific class  can be used to specify the x and y axis values along with their specific data types.
    public class CurveData : IdentifiedObject {
        
        /// The curve of  this curve data point.
        private Curve cim_Curve;
        
        private const bool isCurveMandatory = true;
        
        private const string _CurvePrefix = "cim";
        
        /// The data value of the X-axis variable,  depending on the X-axis units.
        private System.Single? cim_xvalue;
        
        private const bool isXvalueMandatory = false;
        
        private const string _xvaluePrefix = "cim";
        
        /// The data value of the  first Y-axis variable, depending on the Y-axis units.
        private System.Single? cim_y1value;
        
        private const bool isY1valueMandatory = false;
        
        private const string _y1valuePrefix = "cim";
        
        /// The data value of the second Y-axis variable (if present), depending on the Y-axis units.
        private System.Single? cim_y2value;
        
        private const bool isY2valueMandatory = false;
        
        private const string _y2valuePrefix = "cim";
        
        /// The data value of the third Y-axis variable (if present), depending on the Y-axis units.
        private System.Single? cim_y3value;
        
        private const bool isY3valueMandatory = false;
        
        private const string _y3valuePrefix = "cim";
        
        public virtual Curve Curve {
            get {
                return this.cim_Curve;
            }
            set {
                this.cim_Curve = value;
            }
        }
        
        public virtual bool CurveHasValue {
            get {
                return this.cim_Curve != null;
            }
        }
        
        public static bool IsCurveMandatory {
            get {
                return isCurveMandatory;
            }
        }
        
        public static string CurvePrefix {
            get {
                return _CurvePrefix;
            }
        }
        
        public virtual float Xvalue {
            get {
                return this.cim_xvalue.GetValueOrDefault();
            }
            set {
                this.cim_xvalue = value;
            }
        }
        
        public virtual bool XvalueHasValue {
            get {
                return this.cim_xvalue != null;
            }
        }
        
        public static bool IsXvalueMandatory {
            get {
                return isXvalueMandatory;
            }
        }
        
        public static string XvaluePrefix {
            get {
                return _xvaluePrefix;
            }
        }
        
        public virtual float Y1value {
            get {
                return this.cim_y1value.GetValueOrDefault();
            }
            set {
                this.cim_y1value = value;
            }
        }
        
        public virtual bool Y1valueHasValue {
            get {
                return this.cim_y1value != null;
            }
        }
        
        public static bool IsY1valueMandatory {
            get {
                return isY1valueMandatory;
            }
        }
        
        public static string Y1valuePrefix {
            get {
                return _y1valuePrefix;
            }
        }
        
        public virtual float Y2value {
            get {
                return this.cim_y2value.GetValueOrDefault();
            }
            set {
                this.cim_y2value = value;
            }
        }
        
        public virtual bool Y2valueHasValue {
            get {
                return this.cim_y2value != null;
            }
        }
        
        public static bool IsY2valueMandatory {
            get {
                return isY2valueMandatory;
            }
        }
        
        public static string Y2valuePrefix {
            get {
                return _y2valuePrefix;
            }
        }
        
        public virtual float Y3value {
            get {
                return this.cim_y3value.GetValueOrDefault();
            }
            set {
                this.cim_y3value = value;
            }
        }
        
        public virtual bool Y3valueHasValue {
            get {
                return this.cim_y3value != null;
            }
        }
        
        public static bool IsY3valueMandatory {
            get {
                return isY3valueMandatory;
            }
        }
        
        public static string Y3valuePrefix {
            get {
                return _y3valuePrefix;
            }
        }
    }
}
